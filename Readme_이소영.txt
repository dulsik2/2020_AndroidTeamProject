[2020 모바일 프로그래밍 팀 과제]

1분반 18조 
학과: 소프트웨어학부
학번: 20191641
이름: 이소영

----------------------------------------------------------------------------------------------------------------------------------------------------
# 버전
- compileSdkVersion 30
- buildToolsVersion 30.0.2

----------------------------------------------------------------------------------------------------------------------------------------------------
# 실행환경
- AVD: Android 10.0+, Android 10.0
- 윈도우 10
- Intel 프로세서

----------------------------------------------------------------------------------------------------------------------------------------------------
# 프로젝트 개요
- 원하는 조건을 선택하고 그 조건에 맞춰 데이터베이스에 등록된 장학금들을 필터링하여 볼 수 있다.
  필터링된 결과에서 장학금을 선택하면 상세 안내페이지로 연결하거나 캘린더에 장학금 신청 마감 일정을 등록할 수 있다.

----------------------------------------------------------------------------------------------------------------------------------------------------
# 중요 기능
- 장학금 검색을 위해 원하는 조건 선택하기 => 다른 팀원이 구현
- 데이터베이스에서 조건에 맞는 장학금 검색하여 출력하기
- 필터링된 결과에서 선택한 장학금의 상세 안내 페이지 링크로 연결하기
- 필터링된 결과에서 선택한 장학금의 일정을 캘린더앱에 등록하기 => 다른 팀원이 구현

----------------------------------------------------------------------------------------------------------------------------------------------------
# 기능 상세 구현
1. 장학금 검색을 위해 원하는 조건 선택하기
- MainActivity와 FilterActivity를 이용하여 구현 ==> 다른 팀원이 구현



2. 데이터베이스에서 조건에 맞는 장학금 검색하여 출력하기 -> FilterListActivity
  2-1. 검색된 결과 출력 화면 구성 -> activity_filteredlist.xml
  - LinearLayout으로 전체 레이아웃 구성
  - ListView로 검색된 결과 출력
  - LinearLayout을 전체 레이아웃에 추가해 버튼 모음 구성(돌아가기, 자세히 보기, 캘린더에 추가) ==> 다른 팀원이 구현 


  2-2. 리스트뷰 아이템 화면 구성 -> listview_item.xml
  - LinearLayout으로 전체 레이아웃 구성
  - 장학금의 타이틀, 등록금 내,외 정보, 소득 분위 정보, 지역 정보, 기간 정보를 표시하기 위한 TextView 구성


  2-3. 데이터베이스에서 조건에 맞는 장학금 검색하여 리스트뷰에 출력하는 기능 구현 -> FilterList.java
  - ListView를 Custom Adaptor(ListViewAdaptor.java)에 연결하고, ListView 아이템 클릭 이벤트를 처리
    - 현재 선택된 아이템과 이전에 선택되었던 아이템 구별을 위해 View 타입의 last 변수 만듦
    - 현재 선택된 뷰 -> 배경색 변경 및 아이템의 link, title, endDate를 각각 link, toSaveDate, toSaveTitle에 할당
  
  - 돌아가기 버튼(backBtn) 클릭 이벤트 처리
  
  - Firestore에서 선택된 조건에 맞춰 장학금 검색 및 출력
    - Firestore 객체 얻어옴
    - 선택된 조건에 맞춰 Query 구성 및 검색
      *** 조건에 따라 달라져야 하므로 동적으로 구성 *** 
      => Query 변수 q를 만들고 if문과 for문을 이용해 검색 조건 업데이트
      - [ 등록금 내/외, 소득 분위, 지역 ]
        - 필드별로 if문을 통해 선택된 조건의 유/무 및 구성 판단
        - 판단 결과에 따라 whereIn(), whereEqualTo()함수를 이용해 q(쿼리문) 업데이트
      - [ 기간 판단 ]
        *** 기간 관련 필드: startDate와 endDate 2개의 필드로 구성 ***
        *** whereGreaterThanOrEqualTo()와 whereLessThanOrEqualTo()는 같은 필드에만 사용가능 -> if문 이용해 필터링 ***
        - 위에서 만든 쿼리를 실행한 결과에서 for문으로 document 순회하며 기간 필터링
          - 기간 선택했을 경우, 기간 비교하여 필터링한 후 어댑터에 추가
          - 기간 선택하지 않은 경우 어댑터에 바로 추가
    - 선택한 조건에 해당하는 장학금이 없는 경우 경고창 출력 후 MainActivity로 이동
      - Adaptor 클래스의 메소드인 isEmpty()를 이용해 필터링된 결과 확인
      - AlertDialog 이용해 경고창 출력


  2-4. 리스트뷰 어댑터 구현 -> List.ListViewAdaptor.java
  - BaseAdapter를 상속해 Custom Adapter인 ListViewAdapter 클래스를 정의
  - addItem() 함수 구현: 리스트뷰에 이용하는 ArrayList에 아이템 추가
  - getCount(), getItem(), getItemId() 함수 구현
  - getView() 함수 구현: 리스트뷰를 화면에 출력


  2-5. 리스트뷰와 Firestore에서 받아온 document를 변환하기 위해 이용할 커스텀 객체 -> List.Scholar.java
  - 장학금 관련 정보 필드를 모두 가진 Scholar 클래스 정의
  - Fierstore documnet를 커스텀 객체로 변환: 기본 생성자 필요



3. 필터링된 결과에서 선택한 장학금의 상세 안내 페이지 링크로 연결하기 -> FilterList.java
- 자세히 보기 버튼(linkBtn) 클릭 이벤트 처리 
  - 선택된 장학금이 없는 경우, 토스트메시지 출력
  - 선택된 장학금이 있는 경우, 상세 페이지(link 변수)로 연결




4. 필터링된 결과에서 선택한 장학금의 일정을 캘린더앱에 등록하기 -> FilterList.java
- 일정 추가 버튼(calBtn) 클릭 이벤트 처리
  - 선택된 장학금이 없는 경우, 토스트메시지 출력   
  - 선택된 장학금이 있는 경우 ==> 다른 팀원이 구현

----------------------------------------------------------------------------------------------------------------------------------------------------
# Github 주소
- https://github.com/yannJu/2020_AndroidTeamProject
        